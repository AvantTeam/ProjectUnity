sourceSets.main.java.srcDirs = ["src/", "$buildDir/generated/sources/annotationProcessor/java/main/"]

ext{
    assetsDir = new File(rootDir, "main/assets/")
}

task deploy(type: Jar, dependsOn: configurations.runtimeClasspath){
    archiveFileName = "${modName}Desktop.jar"

    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from{
        configurations.runtimeClasspath.collect{
            it.isDirectory()
            ?   it
            :   zipTree(it)
        }
    }
    from files(project.assetsDir)

    doLast{
        delete{ delete "$buildDir/libs/main-${version}.jar" }
    }
}

task dex{
    dependsOn deploy

    doLast{
        exec{
            workingDir = "$buildDir/libs/"
            def command = ["d8", "--min-api", "15", "--output", "${modName}Dexed.jar", "${modName}Desktop.jar"]

            if(windows()){
                commandLine("cmd", "/c", *command)
            }else{
                commandLine(*command)
            }
        }
    }
}

task deployDex(type: Jar){
    dependsOn deploy, dex

    archiveFileName = "${modName}.jar"

    from{[
        zipTree("$buildDir/libs/${modName}Desktop.jar"),
        zipTree("$buildDir/libs/${modName}Dexed.jar")
    ]}

    doLast{
        delete{
            delete "$buildDir/libs/${modName}Desktop.jar"
            delete "$buildDir/libs/${modName}Dexed.jar"
        }
    }
}

if(!hasSprites()){
    println "Sprites folder not found; automatically processing sprites..."
    deploy.dependsOn ":tools:proc"
}

repositories{
    mavenCentral()
    maven{url "https://www.jitpack.io"}
}

dependencies{
    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindustryVersion"

    implementation "com.github.younggam:multi-lib:$multilibVersion"
    annotationProcessor "com.github.Anuken:jabel:$jabelVersion"

    compileOnly project(":annotations")
    annotationProcessor project(":annotations")

    compileJava.options.compilerArgs.addAll([
        "-processor", "unity.annotations.FactionProcessor,unity.annotations.ExpProcessor,unity.annotations.EntityProcessor,unity.annotations.LoadProcessor,unity.annotations.AssetsProcessor"
    ])
}
