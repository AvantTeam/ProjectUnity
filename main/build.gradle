sourceSets.main.java.srcDirs = [ "src/" ]

repositories{
    mavenCentral()
    maven{ url 'https://www.jitpack.io' }
}

ext{
    assetsDir = new File("$projectDir/assets")

    doExec = { cmd ->
        def proc = cmd.execute(null, new File("$buildDir/libs"))
        proc.waitForProcessOutput(System.out, System.err)
    }
}

task jarAndroid{
    dependsOn "jar"

    doLast{
        //collect dependencies needed for desugaring
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect{ "--classpath $it.path" }.join(" ")

        //dex and desugar files - this requires d8 in your PATH
        doExec("d8 $dependencies --min-api 14 --output ${modName}Android.jar ${modName}Desktop.jar")
    }
}

jar{
    archiveFileName = "${modName}Desktop.jar"

    from {configurations.runtimeClasspath.collect{ it.isDirectory() ? it : zipTree(it) }}

    from(project.projectDir){
        include "mod.json"
        include "icon.png"
    }

    from(project.assetsDir){
        include "**"
    }
}

task deploy(type: Jar){
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "${modName}.jar"

    from{ [zipTree("$buildDir/libs/${modName}Desktop.jar"), zipTree("$buildDir/libs/${modName}Android.jar")] }

    doLast{
        delete{ delete "$buildDir/libs/${modName}Desktop.jar" }
        delete{ delete "$buildDir/libs/${modName}Android.jar" }
    }
}
