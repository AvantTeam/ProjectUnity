sourceSets.main.java.srcDirs = [ "src/", "${buildDir}/generated/sources/annotationProcessor/java/main/" ]

repositories{
    mavenCentral()
    maven{ url 'https://www.jitpack.io' }
}

ext{
    assetsDir = new File("$projectDir/assets")

    doExec = { cmd ->
        def proc = cmd.execute(null, new File("$buildDir/libs"))
        proc.waitForProcessOutput(System.out, System.err)
    }
}

task jarAndroid{
    dependsOn "jar"

    doLast{
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect{ "--classpath $it.path" }.join(" ")

        doExec("d8 $dependencies --min-api 14 --output ${modName}Android.jar ${modName}.jar")
    }
}

jar{
    archiveFileName = "${modName}.jar"

    def blacklist = [
        "core-$mindustryVersion",
        "arc-core-$mindustryVersion",
        "javapoet-",
        "lz4-java-",
        "freetype-",
        "g3d-",
        "fx-",
        "arcnet-",
        "rhino-"
    ]
    def contains = { name ->
        for(String dep : blacklist){
            if(name.contains(dep)){
                return true;
            }
        }

        return false;
    }

    from{
        configurations.runtimeClasspath.collect{
            !contains(it.name)
            ?   (it.isDirectory() ? it : zipTree(it))
            :   null
        }
    }

    from(project.projectDir){
        include "mod.json"
        include "icon.png"
    }

    from(project.assetsDir){
        include "**"
    }
}

task deploy(type: Jar){
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "${modName}.jar"

    from{ [zipTree("$buildDir/libs/${modName}.jar"), zipTree("$buildDir/libs/${modName}Android.jar")] }

    doLast{
        delete{ delete "$buildDir/libs/${modName}.jar" }
        delete{ delete "$buildDir/libs/${modName}Android.jar" }
    }
}

dependencies{
    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindustryVersion"

    implementation "com.github.younggam:multi-lib:$multilibVersion"
    annotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:0.3.0"

    implementation project(":annotations")
    annotationProcessor project(":annotations")

    compileJava.options.compilerArgs.addAll([
        "-processor", "unity.annotations.FactionProcessor,unity.annotations.ExpProcessor,unity.annotations.EntityProcessor"
    ])
}
