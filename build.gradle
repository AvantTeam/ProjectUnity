buildscript {
    dependencies {
        classpath "com.github.Anuken.Mindustry:core:$mindustryVersion"
        classpath "com.squareup:javapoet:$javapoetVersion"
        classpath "com.github.bsideup.jabel:jabel-javac-plugin:$jabelVersion"
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.github.AvantTeam'
    version = '0.1'

    ext {
        sdkVersion = '30'
        sdkAPI = '14'
        sdkRoot = System.getenv('ANDROID_SDK_ROOT')
        hasSprites = new File(rootDir, 'main/assets/sprites/').exists()
        windows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
        devBuild = project.hasProperty('dev') && Boolean.parseBoolean(project.property('dev') as String)
    }

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
        options.encoding = 'UTF-8'
        options.compilerArgs += '-Xlint:deprecation'

        options.fork = true
        options.forkOptions.jvmArgs += [
            '--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
            '--add-opens=java.base/sun.reflect.annotation=ALL-UNNAMED'
        ]
    }

    tasks.withType(Javadoc) {
        options {
            addStringOption('Xdoclint:none', '-quiet')
            addStringOption('-release', '16')
        }
    }
}
